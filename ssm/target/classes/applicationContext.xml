<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- spring的配置文件,这里主要配置和业务逻辑有关的 -->
	<context:component-scan base-package="com.lvshihao" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!--========================= 配置dbcp数据源 ==============================-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
	p:driverClassName="com.mysql.jdbc.Driver" 
	p:url="jdbc:mysql://localhost:3306/ssm?rewriteBatchedStatements=true" 
	p:username="root" 
	p:password="lvshihao" 
	p:initialSize="0"
	p:maxActive="20"	
	p:maxIdle="20"
	p:minIdle="1"
	p:maxWait="60000"
	destroy-method="close"> 
	</bean>
	<!-- ========================================================================= -->
	
	
	<!-- =======================配置Mybatis的整合============================== -->
	<!-- 1.指定mybatis全局配置文件的位置 -->
	<!-- 2.引入数据源 -->
	<!-- 3.指定mybatis,mapper文件的位置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:configLocation="classpath:mybatis-config.xml"
		p:dataSource-ref="dataSource"
		p:mapperLocations="classpath:mapper/*.xml"
		p:typeAliasesPackage="com.lvshihao.entity"
	>
	</bean>
	<!-- 配置扫描器,将mybatis接口的实现加入到ioc容器中 -->
	<bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.lvshihao.dao"
		p:sqlSessionFactoryBeanName="sqlSessionFactory"
	>
	</bean>
	<!-- ========================================================================= -->
	
	<!-- ==========================事务控制的配置====================================-->
	<!-- 1.控制住数据源 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource"
	>
	</bean>
	<!-- 开启基于注解的事务,使用XML配置形式的事务(必须主要的都是使用配置式) -->
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut expression="execution(* com.lvshihao.serviceImpl..*(..))" id="txPoint"/>
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	<!-- 配置事务增强,事务如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*"/>
			<!-- 以get开始的所有方法 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- =======================================================================-->
</beans>
